mutate(author = str_replace(author, "K Pantoja", "\\\\textbf{K Pantoja}")) %>%
mutate(bib = paste0(author, " (", year, "). ", title, ". ",
"\\textit{", journal, "}. "))
pubs
scholar::get_publications(scholar_id)
scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE)
scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year))
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
# filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journal = as.character(journal), year, key = row_number()) %>%
mutate(author = str_replace(author, "K Pantoja", "\\\\textbf{K Pantoja}")) %>%
mutate(bib = paste0(author, " (", year, "). ", title, ". ",
"\\textit{", journal, "}. "))
pubs
scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE)
scholar::get_publications(scholar_id)
scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE)
scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
# filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journal = as.character(journal), year, key = row_number())
View(skills)
?detailed_entries
?get_pub
?get_publications
distinct()
projects
projects %>%
detailed_entries(
what = Author,
when = When,
with = Title,
why = Details,
.protect = FALSE
)
projects
projects %>%
detailed_entries(
what = Author,
when = When,
with = Title,
why = Details,
.protect = FALSE
)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
library(dplyr)
library(readr)
library(lubridate)
library(here)
library(glue)
library(magrittr)
library(conflicted)
library(tibble)
library(rlang)
library(stringr)
conflict_prefer("filter", "dplyr")
conflict_prefer("here", "here")
scholar_id <- "BDsDxgoAAAAJ"
jobs_raw <- read_csv(here::here("data", "jobs.csv"))
jobs <- jobs_raw %>%
mutate(Start = zoo::as.yearmon(Start, "%m/%d/%y"),
End = zoo::as.yearmon(End, "%m/%d/%y")) %>%
mutate(When = case_when(
is.na(End) & !is.na(Start) ~ glue("{Start}--Present") %>% as.character(),
!is.na(End) & !is.na(Start) ~ glue("{Start}--{End}") %>% as.character()
))
projects_raw <- read_csv(here::here("data", "projects.csv"))
projects <- projects_raw %>%
mutate(Start = zoo::as.yearmon(Start, "%m/%d/%y"),
End = zoo::as.yearmon(End, "%m/%d/%y")) %>%
mutate(When = case_when(
is.na(End) & !is.na(Start) ~ glue("{Start}--Present") %>% as.character(),
!is.na(End) & !is.na(Start) ~ glue("{Start}--{End}") %>% as.character()
))
skills <- read_csv(here::here("data", "skills.csv"))
tribble(
~ Degree, ~ Year, ~ Institution, ~ Where, ~ Why,
"PhD Candidate, Statistics",
"Aug 2017 - May 2022 (expected)",
"Texas A&M University",
"College Station, Texas",
NA,
"BA, magna cum laude, Mathematics, Minor in Philosophy",
"Aug 2013 - May 2017",
"University of Pennsylvania",
"Philadelphia, Pennsylvania",
NA
) %>%
detailed_entries(Degree, Year, Institution, Where, Why)
jobs %>%
# arrange(desc(End)) %>%
detailed_entries(
what = Role,
when = When,
with = Company,
where = Where,
why = Why,
.protect = FALSE
)
projects %>%
detailed_entries(
what = Author,
when = When,
with = Title,
why = Details,
.protect = FALSE
)
pubs
projects
projects
publications <- read_csv(here::here("data", "pubs.csv"))
publications
publications
projects_raw
projects
publications
publications <- read_csv(here::here("data", "pubs.csv"))
# # pulling from Google Scholar
# pubs <- scholar::get_publications(scholar_id) %>%
#   distinct(title, .keep_all = TRUE) %>%
#   filter(!is.na(year)) %>%
#   transmute(bibtype = "Article", author = as.character(author),
#             title = as.character(title),
#             journal = as.character(journal), year, key = row_number()) %>%
#   mutate(author = str_replace(author, "K Pantoja", "\\\\textbf{K Pantoja}")) %>%
#   mutate(bib = paste0(author, " (", year, "). ", title, ". ",
#                       "\\textit{", journal, "}. "))
#
# pubs %>%
#   detailed_entries(
#     what = journal,
#     when = year,
#     with = title,
#     why = bib,
#     .protect = FALSE
#   )
publications %>%
detailed_entries(
what = Status,
when = Year,
# with = Title,
why = Title,
.protect = FALSE
)
publications
publications <- publications_raw %>%
mutate(Details = paste0(Author, "(", Year, ").", Title, ". ", "\\textit{", Journal, "}. ", "(", Note, ")"))
publications_raw <- read_csv(here::here("data", "pubs.csv"))
publications <- publications_raw %>%
mutate(Details = paste0(Author, "(", Year, ").", Title, ". ", "\\textit{", Journal, "}. ", "(", Note, ")"))
publications
publications <- publications_raw %>%
mutate(Details = paste0(Author, " (", Year, "). ", Title, ". ", "\\textit{", Journal, "}. ", "(", Note, ")"))
---
name: Kristyn
surname: Pantoja
# position: "Student"
address: "Texas A&M University, Department of Statistics"
# phone: +1 210 418 0434
# www: mariecurie.com
email: "kristynp@tamu.edu"
# twitter: kristynpantoja
github: kristynpantoja
linkedin: kristyn-pantoja
date: "`r format(Sys.time(), '%B %Y')`"
headcolor: "000000"
output: vitae::awesomecv
params:
bib_engine: "bibtex"
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
library(dplyr)
library(readr)
library(lubridate)
library(here)
library(glue)
library(magrittr)
library(conflicted)
library(tibble)
library(rlang)
library(stringr)
conflict_prefer("filter", "dplyr")
conflict_prefer("here", "here")
scholar_id <- "BDsDxgoAAAAJ"
```
```{r load jobs, include=FALSE}
jobs_raw <- read_csv(here::here("data", "jobs.csv"))
jobs <- jobs_raw %>%
mutate(Start = zoo::as.yearmon(Start, "%m/%d/%y"),
End = zoo::as.yearmon(End, "%m/%d/%y")) %>%
mutate(When = case_when(
is.na(End) & !is.na(Start) ~ glue("{Start}--Present") %>% as.character(),
!is.na(End) & !is.na(Start) ~ glue("{Start}--{End}") %>% as.character()
))
```
```{r load projects, include=FALSE}
projects_raw <- read_csv(here::here("data", "projects.csv"))
projects <- projects_raw %>%
mutate(Start = zoo::as.yearmon(Start, "%m/%d/%y"),
End = zoo::as.yearmon(End, "%m/%d/%y")) %>%
mutate(When = case_when(
is.na(End) & !is.na(Start) ~ glue("{Start}--Present") %>% as.character(),
!is.na(End) & !is.na(Start) ~ glue("{Start}--{End}") %>% as.character()
))
```
```{r load skills, include = FALSE}
skills <- read_csv(here::here("data", "skills.csv"))
```
```{r load publications, include = FALSE}
publications_raw <- read_csv(here::here("data", "pubs.csv"))
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journal = as.character(journal), year, key = row_number()) %>%
mutate(author = str_replace(author, "K Pantoja", "\\\\textbf{K Pantoja}")) %>%
mutate(bib = paste0(author, " (", year, "). ", title, ". ",
"\\textit{", journal, "}. "))
projects <- projects_raw %>%
mutate(Start = zoo::as.yearmon(Start, "%m/%d/%y"),
End = zoo::as.yearmon(End, "%m/%d/%y")) %>%
mutate(When = case_when(
is.na(End) & !is.na(Start) ~ glue("{Start}--Present") %>% as.character(),
!is.na(End) & !is.na(Start) ~ glue("{Start}--{End}") %>% as.character()
))
publications <- publications_raw %>%
mutate(Details = paste0(Author, " (", Year, "). ", Title, ". ", "\\textit{", Journal, "}. ", "(", Note, ")"))
```
# Education
```{r education}
tribble(
~ Degree, ~ Year, ~ Institution, ~ Where, ~ Why,
"PhD Candidate, Statistics",
"Aug 2017 - May 2022 (expected)",
"Texas A&M University",
"College Station, Texas",
NA,
"BA, magna cum laude, Mathematics, Minor in Philosophy",
"Aug 2013 - May 2017",
"University of Pennsylvania",
"Philadelphia, Pennsylvania",
NA
) %>%
detailed_entries(Degree, Year, Institution, Where, Why)
```
# Experience
```{r experience}
jobs %>%
# arrange(desc(End)) %>%
detailed_entries(
what = Role,
when = When,
with = Company,
where = Where,
why = Why,
.protect = FALSE
)
```
# Projects
```{r projects}
projects %>%
detailed_entries(
what = Author,
when = When,
with = Title,
why = Details,
.protect = FALSE
)
```
# Publications
```{r publications}
# # pulling from Google Scholar
# pubs <- scholar::get_publications(scholar_id) %>%
#   distinct(title, .keep_all = TRUE) %>%
#   filter(!is.na(year)) %>%
#   transmute(bibtype = "Article", author = as.character(author),
#             title = as.character(title),
#             journal = as.character(journal), year, key = row_number()) %>%
#   mutate(author = str_replace(author, "K Pantoja", "\\\\textbf{K Pantoja}")) %>%
#   mutate(bib = paste0(author, " (", year, "). ", title, ". ",
#                       "\\textit{", journal, "}. "))
#
# pubs %>%
#   detailed_entries(
#     what = journal,
#     when = year,
#     with = title,
#     why = bib,
#     .protect = FALSE
#   )
publications %>%
detailed_entries(
what = Status,
when = Year,
# with = Title,
why = Details,
.protect = FALSE
)
```
# Skills
```{r skills}
skills %>%
detailed_entries(what = Software, with = Type, .protect = FALSE)
```
publications %>%
detailed_entries(
what = Status,
when = Year,
# with = Title,
why = Details,
.protect = FALSE
)
publications <- publications_raw %>%
mutate(Details = paste0(Author, " (", Year, "). ", Title, ". ", "\\textit{", Journal, "}. ", "(", Note, ")")) %>%
mutate(Details = case_when(
!is.na(Note) ~ paste0(Details, "(", Note, ")")
))
publications
?distinct
publications_raw <- read_csv(here::here("data", "pubs.csv"))
publications <- publications_raw %>%
mutate(Details = paste0(Author, " (", Year, "). ", cat("\"", Title, "\""), ". ", "\\textit{", Journal, "}." )) %>%
mutate(Details = case_when(
!is.na(Note) ~ paste0(Details, " (", Note, ")")
))
publications_raw <- read_csv(here::here("data", "pubs.csv"))
publications_raw
publications
publications$Details
date()
year()
Sys.Date()
strsplit(Sys.Date(), split = "")
?strsplit
?str_split
str_split(Sys.Date(), pattern = "-")
str_split(Sys.Date(), pattern = "-")[1]
str_split(as.character(Sys.Date()), pattern = "-")[1]
str_split(Sys.Date(), pattern = "-")
str_split(Sys.Date(), pattern = "-")[[1]]
str_split(Sys.Date(), pattern = "-")[[1]][1]
current_year <- str_split(Sys.Date(), pattern = "-")[[1]][1]
publications_raw <- read_csv(here::here("data", "pubs.csv"))
current_year <- str_split(Sys.Date(), pattern = "-")[[1]][1]
publications <- publications_raw %>%
# if already published, concatenate Author, Year (else, do current_year+)
mutate(Details = case_when(
(Status == "Working") ~ paste0(Author, " (", current_year, "+). "),
!(Status == "Working") ~ paste0(Author, " (", Year, "). ")
)) %>%
# concatenate Title
mutate(Details = paste0(Details, cat("\"", Title, "\""), ". ", "\\textit{", Journal, "}." )) %>%
# if there are notes
mutate(Details = case_when(
!is.na(Note) ~ paste0(Details, " (", Note, ")")
))
publications
publications_raw
publications
publications %>%
detailed_entries(
what = Status,
why = Details,
.protect = FALSE
)
publications_raw <- read_csv(here::here("data", "pubs.csv"))
publications_raw
publications <- publications_raw %>%
# if already published, concatenate Author, Year (else, do current_year+)
mutate(Details = case_when(
(Status == "Working") ~ paste0(Author, " (", current_year, "+). "),
!(Status == "Working") ~ paste0(Author, " (", Year, "). ")
)) %>%
# concatenate Title
mutate(Details = paste0(Details,"\`\`", Title, ".\'\' ")) %>%
# if already published, concatenate Journal (else, do current_year+)
mutate(Details = case_when(
!(Status == "Working") ~ paste0(Details, "\\textit{", Journal, "}. ")
)) %>%
# if there are notes
mutate(Details = case_when(
!is.na(Note) ~ paste0(Details, " (", Note, ")")
))
publications
publications <- publications_raw %>%
# if already published, concatenate Author, Year (else, do current_year+)
mutate(Details = case_when(
(Status == "Working") ~ paste0(Author, " (", current_year, "+). "),
!(Status == "Working") ~ paste0(Author, " (", Year, "). ")
)) %>%
# concatenate Title
mutate(Details = paste0(Details,"\`\`", Title, ".\'\' ")) %>%
# if already published, concatenate Journal (else, do current_year+)
mutate(Details = case_when(
(Status == "Working") ~ Details,
!(Status == "Working") ~ paste0(Details, "\\textit{", Journal, "}. ")
)) %>%
# if there are notes
mutate(Details = case_when(
is.na(Note) ~ Details,
!is.na(Note) ~ paste0(Details, " (", Note, ")")
))
publications
?detailed_entries
update.packages("vitae")
tribble(
~ Degree, ~ Year, ~ Institution, ~ Where, ~Why,
"PhD Candidate, Statistics",
"Aug 2017 - May 2022 (expected)",
"Texas A&M University",
"College Station, Texas",
"Scholarships & Awards: Ruth J. and Howard F. Newton Graduate Student Teaching Award (2019), Graduate Merit Scholarship (2017)",
"BA, Mathematics (Minor: Philosophy)",
"Aug 2013 - May 2017",
"University of Pennsylvania",
"Philadelphia, Pennsylvania",
"Graduated magna cum laude"
)
publications
publications$Details
tribble(
~ Degree, ~ Year, ~ Institution, ~ Where, ~Why,
"PhD Candidate, Statistics",
"Aug 2017 - May 2022 (expected)",
"Texas A&M University",
"College Station, Texas",
"Scholarships & Awards: Ruth J. and Howard F. Newton Graduate Student Teaching Award (2019), Graduate Merit Scholarship (2017)",
"BA, Mathematics (Minor: Philosophy)",
"Aug 2013 - May 2017",
"University of Pennsylvania",
"Philadelphia, Pennsylvania",
"Graduated \\textit{magna cum laude}"
)
tribble(
~ Degree, ~ Year, ~ Institution, ~ Where, ~Why,
"PhD Candidate, Statistics",
"Aug 2017 - May 2022 (expected)",
"Texas A&M University",
"College Station, Texas",
"Scholarships & Awards: Ruth J. and Howard F. Newton Graduate Student Teaching Award (2019), Graduate Merit Scholarship (2017)",
"BA, Mathematics (Minor: Philosophy)",
"Aug 2013 - May 2017",
"University of Pennsylvania",
"Philadelphia, Pennsylvania",
"Graduated \\textit{magna cum laude}"
)$Why
class(skills)
tribble(
~ Degree, ~ Year, ~ Institution, ~ Where, ~Why,
"PhD Candidate, Statistics",
"Aug 2017 - May 2022 (expected)",
"Texas A&M University",
"College Station, Texas",
"Scholarships & Awards: Ruth J. and Howard F. Newton Graduate Student Teaching Award (2019), Graduate Merit Scholarship (2017)",
"BA, Mathematics (Minor: Philosophy)",
"Aug 2013 - May 2017",
"University of Pennsylvania",
"Philadelphia, Pennsylvania",
"Graduated \\textit{magna cum laude}"
) %>%
detailed_entries(Degree, Year, Institution, Where, Why) %>%
class()
?detailed_entries
?tribble
skills
skills %>%
mutate(Software = paste0(Software, "\\vspace{-4mm}"))
skills %>%
mutate(Software = paste0(Software, " \\vspace{-4mm}"))
publications
publications_raw <- read_csv(here::here("data", "pubs.csv"))
current_year <- str_split(Sys.Date(), pattern = "-")[[1]][1]
publications <- publications_raw %>%
# if already published, concatenate Author, Year (else, do current_year+)
mutate(Details = case_when(
(Status == "In Progress") ~ paste0(Author, " (", current_year, "+). "),
!(Status == "In Progress") ~ paste0(Author, " (", Year, "). ")
)) %>%
# concatenate Title
mutate(Details = paste0(Details,"\`\`", Title, ".\'\' ")) %>%
# if already published, concatenate Journal (else, do current_year+)
mutate(Details = case_when(
(Status == "In Progress") ~ Details,
!(Status == "In Progress") ~ paste0(Details, "\\textit{", Journal, "}. ")
)) %>%
# if there are notes
mutate(Details = case_when(
is.na(Note) ~ Details,
!is.na(Note) ~ paste0(Details, "(", Note, ")")
)) %>%
mutate(Details = paste0("\\vspace{-4mm}", Details))
publications
