mutate(When = case_when(
is.na(End) & !is.na(Start) ~ glue("{Start}--Present") %>% as.character(),
!is.na(End) & !is.na(Start) ~ glue("{Start}--{End}") %>% as.character()
))
scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number())
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number())
pubs
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number())
pubs
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
library(dplyr)
library(readr)
library(lubridate)
library(here)
library(glue)
library(magrittr)
library(conflicted)
library(tibble)
conflict_prefer("filter", "dplyr")
conflict_prefer("here", "here")
scholar_id <- "l_YEty4AAAAJ&"
tribble(
~ Degree, ~ Year, ~ Institution, ~ Where, ~ Details,
"PhD Statistics",
"Aug 2017 - 2022 (expected)",
"Texas A&M University",
"College Station, Texas",
"Coursework includes Bayesian statistics, deep learning",
"BSE Operations Research and Financial Engineering", "Sep 2011 - Jun 2015",
"Princeton University", "Princeton, New Jersey",
"Coursework includes foo bar baz"
) %>%
detailed_entries(Degree, Year, Institution, Where, Details)
bibliography_entries("foo")
?bibliography_entries
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number()) %>%
# RefManageR::as.BibEntry() %>%
# RefManageR::WriteBib("thebib.bib")
bibliography_entries("thebib.bib")
dir()
install.packages(c("data.table", "dplyr", "tinytex"))
install.packages(c("data.table", "dplyr", "tinytex"))
install.packages(c("data.table", "dplyr", "tinytex"))
tinytex::tlmgr_search("biber")
tinytex::tlmgr_update()
tinytex::tlmgr_search("biber")
?bibliography_entries
?vitae::bibliography_entries
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
bibliography_entries(file = "thebib.bib")
vitae::bibliography_entries(file = "thebib.bib")
library(rlang)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
library(dplyr)
library(readr)
library(lubridate)
library(here)
library(glue)
library(magrittr)
library(conflicted)
library(tibble)
library(rlang)
conflict_prefer("filter", "dplyr")
conflict_prefer("here", "here")
scholar_id <- "l_YEty4AAAAJ&"
options(encoding = "UTF-8")
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number()) %>%
RefManageR::as.BibEntry() %>%
RefManageR::WriteBib("thebib.bib")
vitae::bibliography_entries(file = "thebib.bib")
foo <- vitae::bibliography_entries(file = "thebib.bib")
foo
?knitr::knit2pdf
knitr::knit2pdf("resume/resume.Rmd", "resume/resume.pdf",
bib_engine = "bibtex")
knitr::knit2pdf(input = "resume/resume.Rmd", output = "resume/resume.pdf",
bib_engine = "bibtex")
knitr::knit2pdf(input = "resume/resume.tex", output = "resume/resume.pdf",
bib_engine = "bibtex")
knit_with_parameters('~/Projects/Resume/resume/resume.Rmd')
pubs
options(encoding = "UTF-8")
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number()) %>%
RefManageR::as.BibEntry() %>%
RefManageR::WriteBib("thebib.bib")
foo <- vitae::bibliography_entries(file = "thebib.bib")
foo
pubs
options(encoding = "UTF-8")
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number()) %>%
RefManageR::as.BibEntry() %>%
RefManageR::WriteBib("thebib.bib")
pubs
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number()) %>%
RefManageR::as.BibEntry() %>%
RefManageR::WriteBib("thebib.bib")
pubs
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
library(dplyr)
library(readr)
library(lubridate)
library(here)
library(glue)
library(magrittr)
library(conflicted)
library(tibble)
library(rlang)
conflict_prefer("filter", "dplyr")
conflict_prefer("here", "here")
scholar_id <- "l_YEty4AAAAJ&"
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number()) %>%
RefManageR::as.BibEntry() %>%
RefManageR::WriteBib("thebib.bib")
pubs
View(pubs)
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number())
pubs
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number()) %>%
RefManageR::as.BibEntry()
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number()) %>%
RefManageR::as.BibEntry()
pubs
pubs
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number())
pubs
?vitae::transmute
View(pubs)
pubs <- scholar::get_publications(scholar_id)
PUBS
pubs
?scholar::get_publications
pubs
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number()) %>%
mutate(bib = paste(author, ".", title))
pubs
pubs$bib
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number()) %>%
mutate(bib = paste0(author, ". (", year, "). ", title, ". ", journal, ". "))
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number()) %>%
mutate(bib = paste0(author, ". (", year, "). ", title, ". ",
journaltitle, ". "))
pubs
pubs$bib
pubs
View(params)
View(pubs)
?detailed_entries
options(encoding = "UTF-8")
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number()) %>%
mutate(bib = paste0(author, ", (", year, "). ", title, ". ",
journaltitle, ". ")) %>%
detailed_entries(what = title, when = year, with = author,
where = jounraltitle, why = bib)
options(encoding = "UTF-8")
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number()) %>%
mutate(bib = paste0(author, ", (", year, "). ", title, ". ",
journaltitle, ". ")) %>%
detailed_entries(what = title, when = year, with = author,
where = journaltitle, why = bib)
jobs %>%
# arrange(desc(End)) %>%
detailed_entries(
what = Role,
when = When,
with = Company,
where = Where,
why = Why,
.protect = FALSE
)
jobs_raw <- read_csv(here::here("data", "jobs.csv"))
jobs <- jobs_raw %>%
mutate(Start = zoo::as.yearmon(Start, "%m/%d/%y"),
End = zoo::as.yearmon(End, "%m/%d/%y")) %>%
mutate(When = case_when(
is.na(End) & !is.na(Start) ~ glue("{Start}--Present") %>% as.character(),
!is.na(End) & !is.na(Start) ~ glue("{Start}--{End}") %>% as.character()
))
jobs %>%
# arrange(desc(End)) %>%
detailed_entries(
what = Role,
when = When,
with = Company,
where = Where,
why = Why,
.protect = FALSE
)
options(encoding = "UTF-8")
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number()) %>%
mutate(bib = paste0(author, ", (", year, "). ", title, ". ",
journaltitle, ". ")) %>%
detailed_entries(what = title, when = year, with = author,
where = journaltitle, why = bib,
.protect = FALSE)
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number()) %>%
mutate(bib = paste0(author, ", (", year, "). ", title, ". ",
journaltitle, ". ")) %>%
detailed_entries(what = title, when = year, with = author,
where = journaltitle, why = bib,
.protect = FALSE)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
library(dplyr)
library(readr)
library(lubridate)
library(here)
library(glue)
library(magrittr)
library(conflicted)
library(tibble)
library(rlang)
conflict_prefer("filter", "dplyr")
conflict_prefer("here", "here")
scholar_id <- "l_YEty4AAAAJ&"
jobs_raw <- read_csv(here::here("data", "jobs.csv"))
jobs <- jobs_raw %>%
mutate(Start = zoo::as.yearmon(Start, "%m/%d/%y"),
End = zoo::as.yearmon(End, "%m/%d/%y")) %>%
mutate(When = case_when(
is.na(End) & !is.na(Start) ~ glue("{Start}--Present") %>% as.character(),
!is.na(End) & !is.na(Start) ~ glue("{Start}--{End}") %>% as.character()
))
jobs %>%
# arrange(desc(End)) %>%
detailed_entries(
what = Role,
when = When,
with = Company,
where = Where,
why = Why,
.protect = FALSE
)
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number()) %>%
mutate(bib = paste0(author, ", (", year, "). ", title, ". ",
journaltitle, ". ")) %>%
detailed_entries(what = title, when = year, with = author,
where = journaltitle, why = bib,
.protect = FALSE)
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number()) %>%
mutate(bib = paste0(author, ", (", year, "). ", title, ". ",
journaltitle, ". ")) %>%
detailed_entries(what = title, when = year, with = author,
where = journaltitle, why = bib,
.protect = FALSE)
scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number()) %>%
mutate(bib = paste0(author, ", (", year, "). ", title, ". ",
journaltitle, ". ")) %>%
detailed_entries(what = title, when = year, with = author,
where = journaltitle, why = bib,
.protect = FALSE)
View(pubs)
pubs <- scholar::get_publications(scholar_id) %>%
distinct(title, .keep_all = TRUE) %>%
filter(!is.na(year)) %>%
transmute(bibtype = "Article", author = as.character(author),
title = as.character(title),
journaltitle = as.character(journal), year, key = row_number()) %>%
mutate(bib = paste0(author, ", (", year, "). ", title, ". ",
journaltitle, ". "))
View(pubs)
pubs
pubs$author
stringr::str_replace(pubs$author, "P Ding", "\\textit{P Ding}")
stringr::str_replace(pubs$author, "P Ding", "\\\\textit{P Ding}")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
library(dplyr)
library(readr)
library(lubridate)
library(here)
library(glue)
library(magrittr)
library(conflicted)
library(tibble)
library(rlang)
library(stringr)
conflict_prefer("filter", "dplyr")
conflict_prefer("here", "here")
scholar_id <- "l_YEty4AAAAJ&"
projects_raw <- read_csv(here::here("data", "projects.csv"))
projects <- projects_raw %>%
mutate(Start = zoo::as.yearmon(Start, "%m/%d/%y"),
End = zoo::as.yearmon(End, "%m/%d/%y")) %>%
mutate(When = case_when(
is.na(End) & !is.na(Start) ~ glue("{Start}--Present") %>% as.character(),
!is.na(End) & !is.na(Start) ~ glue("{Start}--{End}") %>% as.character()
))
projects
projects_raw <- read_csv(here::here("data", "projects.csv"))
projects <- projects_raw %>%
mutate(Start = zoo::as.yearmon(Start, "%m/%d/%y"),
End = zoo::as.yearmon(End, "%m/%d/%y")) %>%
mutate(When = case_when(
is.na(End) & !is.na(Start) ~ glue("{Start}--Present") %>% as.character(),
!is.na(End) & !is.na(Start) ~ glue("{Start}--{End}") %>% as.character()
))
projects
projects %>%
detailed_entries(
what = Author,
when = When,
with = Title,
why = Details,
.protect = FALSE
)
tribble(
~ Degree, ~ Year, ~ Institution, ~ Where,
"PhD Statistics",
"Aug 2017 - 2022 (expected)",
"Texas A&M University",
"College Station, Texas",
"BSE Operations Research and Financial Engineering",
"Sep 2011 - Jun 2015",
"Princeton University",
"Princeton, New Jersey"
) %>%
detailed_entries(Degree, Year, Institution, Where, Details)
pubs <- scholar::get_publications(scholar_id)
pubs
?scholar::get_publications
knitr::knit2pdf("resume/resume.Rmd", "resume/resume.pdf",
bib_engine = "bibtex")
?knitr::knit2pdf
tinytex:::install_prebuilt()
knitr::knit2pdf("resume/resume.Rmd", "resume/resume.pdf",
bib_engine = "bibtex")
?knitr::knit2pdf
knitr::knit2pdf(input = "resume/resume.Rmd",
output = "resume/resume.pdf",
bib_engine = "bibtex")
?knitr::knit2pdf
rmarkdown::render("temp.rmd")
knitr::knit2pdf(input = "resume/resume.Rmd",
output = "resume/resume.pdf",
bib_engine = "bibtex")
?knitr::knit2pdf
rmarkdown::render("resume/resume.Rmd")
knitr::knit2pdf(input = "resume/resume.Rmd",
output = "resume/resume.pdf",
bib_engine = "bibtex")
?knitr::knit2pdf
rmarkdown::render("resume/resume.Rmd")
knitr::knit2pdf(input = "resume/resume.Rmd",
output = "resume/resume.pdf",
bib_engine = "bibtex")
?knitr::knit2pdf
rmarkdown::render("resume/resume.Rmd")
knitr::knit2pdf(input = "resume/resume.Rmd",
output = "resume/resume.pdf",
bib_engine = "bibtex")
?knitr::knit2pdf
# rmarkdown::render("resume/resume.Rmd")
knitr::knit2pdf(input = "resume/resume.Rmd",
output = "resume/resume.pdf",
bib_engine = "bibtex")
# rmarkdown::render("resume/resume.Rmd")
knitr::knit2pdf(input = "resume/resume.Rmd",
output = "resume/resume.pdf",
bib_engine = "bibtex")
?knitr::knit2pdf
devtools::install_github('yihui/tinytex')
# rmarkdown::render("resume/resume.Rmd")
knitr::knit2pdf(input = "resume/resume.Rmd",
output = "resume/resume.pdf",
bib_engine = "bibtex")
?knitr::knit2pdf
devtools::install_github('rstudio/rmarkdown')
# rmarkdown::render("resume/resume.Rmd")
knitr::knit2pdf(input = "resume/resume.Rmd",
output = "resume/resume.pdf",
bib_engine = "bibtex")
?knitr::knit2pdf
# rmarkdown::render("resume/resume.Rmd")
knitr::knit2pdf(input = "resume/resume.Rmd",
output = "resume/resume.pdf",
bib_engine = "bibtex")
?knitr::knit2pdf
# rmarkdown::render("resume/resume.Rmd")
knitr::knit2pdf(input = "resume/resume.Rmd",
output = "resume/resume.pdf",
bib_engine = "bibtex")
?knitr::knit2pdf
devtools::install_version("rmarkdown", version = "1.8")
# rmarkdown::render("resume/resume.Rmd")
knitr::knit2pdf(input = "resume/resume.Rmd",
output = "resume/resume.pdf",
bib_engine = "bibtex")
?knitr::knit2pdf
update.packages()
y
y
update.packages(ask =FALSE)
update.packages()
